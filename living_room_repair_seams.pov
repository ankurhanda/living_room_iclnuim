/*
   POV-Ray lightmapping helper - Jaime Vives Piqueres, 2011
   --
   File generated by prepare_baking.jar

   Fixes the problem with visible seams on lightmaps by averaging some
   copies around. Only works if there is some space between UV charts.
*/

#version 3.7;

#declare bake_padding=.0025;
#declare t_base_image=
texture{
 pigment{
 #switch (clock)
  #case (1)
   image_map{exr "lightmaps/room_molding_.exr" interpolate 2}
   #break
  #case (2)
   image_map{exr "lightmaps/wall_pic3_frame_.exr" interpolate 2}
   #break
  #case (3)
   image_map{exr "lightmaps/wall_pic2_frame_.exr" interpolate 2}
   #break
  #case (4)
   image_map{exr "lightmaps/door_.exr" interpolate 2}
   #break
  #case (5)
   image_map{exr "lightmaps/chair2_seat_.exr" interpolate 2}
   #break
  #case (6)
   image_map{exr "lightmaps/chair2_legs_.exr" interpolate 2}
   #break
  #case (7)
   image_map{exr "lightmaps/wall_pic3_.exr" interpolate 2}
   #break
  #case (8)
   image_map{exr "lightmaps/wall_pic2_.exr" interpolate 2}
   #break
  #case (9)
   image_map{exr "lightmaps/spots_light_.exr" interpolate 2}
   #break
  #case (10)
   image_map{exr "lightmaps/spots_metal_.exr" interpolate 2}
   #break
  #case (11)
   image_map{exr "lightmaps/balcony_ceiling_.exr" interpolate 2}
   #break
  #case (12)
   image_map{exr "lightmaps/balcony_floor_.exr" interpolate 2}
   #break
  #case (13)
   image_map{exr "lightmaps/balcony_wall_.exr" interpolate 2}
   #break
  #case (15)
   image_map{exr "lightmaps/room_ceiling_.exr" interpolate 2}
   #break
  #case (16)
   image_map{exr "lightmaps/room_floor_.exr" interpolate 2}
   #break
  #case (17)
   image_map{exr "lightmaps/room_wall1_.exr" interpolate 2}
   #break
  #case (18)
   image_map{exr "lightmaps/room_walls_.exr" interpolate 2}
   #break
  #case (19)
   image_map{exr "lightmaps/curtains_.exr" interpolate 2}
   #break
  #case (20)
   image_map{exr "lightmaps/wall_pic1_.exr" interpolate 2}
   #break
  #case (21)
   image_map{exr "lightmaps/wall_pic1_frame_.exr" interpolate 2}
   #break
  #case (22)
   image_map{exr "lightmaps/curtain_rail_.exr" interpolate 2}
   #break
  #case (23)
   image_map{exr "lightmaps/foot_lamp1_.exr" interpolate 2}
   #break
  #case (24)
   image_map{exr "lightmaps/windows_frames_.exr" interpolate 2}
   #break
  #case (25)
   image_map{exr "lightmaps/stand_.exr" interpolate 2}
   #break
  #case (26)
   image_map{exr "lightmaps/chair1_legs_.exr" interpolate 2}
   #break
  #case (27)
   image_map{exr "lightmaps/chair1_seat_.exr" interpolate 2}
   #break
  #case (28)
   image_map{exr "lightmaps/sofa1_legs_.exr" interpolate 2}
   #break
  #case (29)
   image_map{exr "lightmaps/sofa1_.exr" interpolate 2}
   #break
  #case (30)
   image_map{exr "lightmaps/sofa2_legs_.exr" interpolate 2}
   #break
  #case (31)
   image_map{exr "lightmaps/sofa2_.exr" interpolate 2}
   #break
  #case (32)
   image_map{exr "lightmaps/table_board_.exr" interpolate 2}
   #break
  #case (33)
   image_map{exr "lightmaps/foot_lamp_shade1_.exr" interpolate 2}
   #break
  #case (34)
   image_map{exr "lightmaps/palm_pot_.exr" interpolate 2}
   #break
  #case (35)
   image_map{exr "lightmaps/palm1_.exr" interpolate 2}
   #break
  #case (36)
   image_map{exr "lightmaps/foot_lamp2_.exr" interpolate 2}
   #break
  #case (37)
   image_map{exr "lightmaps/foot_lamp_shade2_.exr" interpolate 2}
   #break
  #case (38)
   image_map{exr "lightmaps/vase1_.exr" interpolate 2}
   #break
  #case (39)
   image_map{exr "lightmaps/cushion_.exr" interpolate 2}
   #break
  #case (40)
   image_map{exr "lightmaps/cushion2_.exr" interpolate 2}
   #break
  #case (41)
   image_map{exr "lightmaps/cushion3_.exr" interpolate 2}
   #break
  #case (42)
   image_map{exr "lightmaps/rug_.exr" interpolate 2}
   #break
  #case (43)
   image_map{exr "lightmaps/plate_.exr" interpolate 2}
   #break
 #end
 }
 finish{emission 1 diffuse 0 ambient 0}
}
#declare t_output_image=
texture{t_base_image translate bake_padding*x}
texture{t_base_image translate -bake_padding*x}
texture{t_base_image translate bake_padding*y}
texture{t_base_image translate -bake_padding*y}
texture{t_base_image}
#include "screen.inc"
object{Screen_Plane(texture{t_output_image},1,<0,0,0>,<1,1,0>)}
